name: Docker Build and Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  DOCKER_IMAGE: messaging-app
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying ${{ env.DOCKER_IMAGE }} to staging environment"
        echo "Image: ${{ secrets.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}"
        # Add your staging deployment commands here
        # Example: kubectl set image deployment/messaging-app messaging-app=${{ secrets.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying ${{ env.DOCKER_IMAGE }} to production environment"
        echo "Image: ${{ secrets.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}"
        # Add your production deployment commands here
        # Example: kubectl set image deployment/messaging-app messaging-app=${{ secrets.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  notify:
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-staging, deploy-production]
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.build-and-push.result == 'success'
      run: |
        echo "✅ Docker image built and deployed successfully!"
        echo "Image: ${{ secrets.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}"
        
    - name: Notify on failure
      if: needs.build-and-push.result == 'failure'
      run: |
        echo "❌ Docker build and deploy failed!"
        exit 1
